// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backendCRM.Data;

#nullable disable

namespace backendCRM.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241218135921_SeedUsers")]
    partial class SeedUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("backendCRM.Models.Absence", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP");

                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint(20) unsigned");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("absences", (string)null);
                });

            modelBuilder.Entity("backendCRM.Models.TimeSession", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<TimeSpan?>("ElapsedTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("timestamp");

                    b.Property<TimeSpan?>("FullElapsedTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("StartTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP");

                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint(20) unsigned");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("time_sessions", (string)null);
                });

            modelBuilder.Entity("backendCRM.Models.User", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(191)
                        .HasColumnType("varchar(191)");

                    b.Property<DateTime?>("EmailVerifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(191)
                        .HasColumnType("varchar(191)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(191)
                        .HasColumnType("varchar(191)");

                    b.Property<string>("RememberToken")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1ul,
                            CreatedAt = new DateTime(2024, 12, 18, 13, 59, 20, 320, DateTimeKind.Utc).AddTicks(6733),
                            Email = "john@example.com",
                            Name = "John Doe",
                            Password = "$2a$11$p6YA6hbX52AnQB1uEYpCiOEM2jW/RWB5RZVy9XlSH7T5WC5uWcq4.",
                            UpdatedAt = new DateTime(2024, 12, 18, 13, 59, 20, 320, DateTimeKind.Utc).AddTicks(6733)
                        },
                        new
                        {
                            Id = 2ul,
                            CreatedAt = new DateTime(2024, 12, 18, 13, 59, 20, 320, DateTimeKind.Utc).AddTicks(6733),
                            Email = "john1@example.com",
                            Name = "John Doe1",
                            Password = "$2a$11$roQ4IO66aWQwAmVyOydIG.z1CyU3fPpv/4gK0SS8OluXfeApfdBda",
                            UpdatedAt = new DateTime(2024, 12, 18, 13, 59, 20, 320, DateTimeKind.Utc).AddTicks(6733)
                        },
                        new
                        {
                            Id = 3ul,
                            CreatedAt = new DateTime(2024, 12, 18, 13, 59, 20, 320, DateTimeKind.Utc).AddTicks(6733),
                            Email = "john2@example.com",
                            Name = "John Doe2",
                            Password = "$2a$11$LluIxGJg3orvCSiKirNFz.cSnHiqVLErp4i6AgKmHDciXMc1HPRUO",
                            UpdatedAt = new DateTime(2024, 12, 18, 13, 59, 20, 320, DateTimeKind.Utc).AddTicks(6733)
                        });
                });

            modelBuilder.Entity("backendCRM.Models.Absence", b =>
                {
                    b.HasOne("backendCRM.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("backendCRM.Models.TimeSession", b =>
                {
                    b.HasOne("backendCRM.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
